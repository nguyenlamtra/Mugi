@using Mugi.Web.StaticValue
@using Mugi.Web.Model.ViewModel
@model OrderedViewModel

@{
    ViewData["Title"] = "OrderDetails";
    Layout = "~/Views/Shared/_StaffLayout.cshtml";
}

<style>
    .ui.collapsing.table.custom {
        width: 100%;
    }

    .center.custom {
        text-align: center;
    }

    .ui.vertical.accordion.menu.custom {
        width: 100%;
    }
</style>
<div class="twelve wide column">
    <div class="ui segment">
        <div class="item">
            <h2 class="ui header center custom">Xử lí đơn hàng</h2>

            <div class="ui three column center aligned  stackable grid">
                <div class="column">Ngày đặt</div>
                <div class="column">SLSP</div>
                <div class="column">Tình trạng</div>
            </div>
        </div>
        <div class="item" id="@Model.OrderId">
            <div class="ui three column center aligned   stackable grid">
                <div class="column">@Model.CreatedDate</div>
                <div class="column">@Model.NumberProduct</div>

                @switch (@Model.Status)
                {
                    case StaticValue.STATUS_HANDLING:
                        <div class="column">Chưa XL</div>
                        <div class="column">
                        </div>
                        break;
                    case StaticValue.STATUS_CONFIRMED:
                        <div class="column">Đã xác nhận</div>
                        <div class="column"></div>
                        break;
                    case StaticValue.STATUS_DENIED:
                        <div class="column">Đã hủy</div>
                        <div class="column"></div>
                        break;
                    case StaticValue.STATUS_COMPLETED:
                        <div class="column">Đã hủy</div>
                        <div class="column"></div>
                        break;
                    case StaticValue.STATUS_DELIVERING:
                        <div class="column">Đã hủy</div>
                        <div class="column"></div>
                        break;
                    default:
                        <div class="column"></div>
                        <div class="column"></div>
                        break;
                }

            </div><br />
            <div class="content">
                <table class="ui center aligned collapsing table custom">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Tên mặt hàng</th>
                            <th>Thuộc tính</th>
                            <th>Đơn giá (VNĐ)</th>
                            <th>Số lượng</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ var j = 1;}
                        @foreach (var subItem in Model.SubProductOrderedViewModels)
                        {
                            var product = Model.ProductOrderedViewModels.Where(x => x.ProductId == subItem.ProductId).SingleOrDefault();
                            <tr>
                                <td>@j</td>
                                <td>@product.ProductName</td>
                                <td>
                                    @foreach (var property in subItem.PropertyDetails)
                                    {
                                        <p>@property.PropertyName : @property.PropertyValue</p>
                                    }
                                </td>
                                <td>@product.Price.ToString("#,##")</td>
                                <td>@subItem.NumberSubProduct</td>
                            </tr>
                            j++;
                        }
                    </tbody>
                </table>
                <div class="ui segment">
                    <div class="field">
                        Số điện thoại: @Model.PhoneNumber
                    </div>
                    <div class="field">
                        Địa chỉ: @Model.Address
                    </div>
                </div>

                <div class="ui container center aligned ">
                    @switch (Model.Status)
                    {
                        case StaticValue.STATUS_HANDLING:
                            <a class="ui button" href="@Url.Action("ConfirmOrder", "Staff", new { orderId = Model.OrderId })" id="confirm">Confirm</a>
                            <a class="ui button" href="@Url.Action("DenyOrder", "Staff", new { orderId = Model.OrderId })" id="deny">Deny</a>
                            break;
                        case StaticValue.STATUS_CONFIRMED:
                            <a class="ui button" href="@Url.Action("Deliver", "Staff", new { orderId = Model.OrderId })" id="confirm">Chọn người giao hàng</a>
                            break;
                        case StaticValue.STATUS_DENIED:
                            break;
                        case StaticValue.STATUS_COMPLETED:
                            break;
                        case StaticValue.STATUS_DELIVERING:
                            break;
                        default:
                            break;

                    }

                </div>
            </div>
        </div>
    </div>
</div>
@{ var temp = TempData["OrderDetails"] as string;}
@if (temp == "Failed")
{
    <div class="ui basic modal">
        <div class="ui icon header">
            <i class="archive icon"></i>
            Messages
        </div>
        <div class="content" style="text-align: center">
            <p>Thay đổi trạng thái đơn hàng thất bại!</p>
        </div>
        <div class="actions" style="text-align: center">
            <div class="ui green ok inverted button">
                <i class="checkmark icon"></i>
                Ok
            </div>
        </div>
    </div>
}

@section scripts{
    <script>
        $(document).ready(function () {
            $('.ui.accordion')
                .accordion()
                ;
        })

    </script>
}