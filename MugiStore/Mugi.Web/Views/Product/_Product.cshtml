@using Mugi.Web.Model.ViewModel
@using Mugi.Web.Model
@model List<ProductModel>

@{
    ViewData["Title"] = "_Product";
    int pageNumbers = @Model.Count() % 12 == 0 ? @Model.Count() / 12 : @Model.Count() / 12 + 1;
    string display;
    int changePageButtons = 4;
}
@if (pageNumbers < changePageButtons)
{ changePageButtons = pageNumbers; }

 <style>
     .ui.card.custom{
         margin:auto;
     }
     .content.custom {
         min-height: 71.16px;
     }
 </style>

@*Products*@
<div class="ui stackable grid four column ">
    @for (int i = 1; i <= Model.Count(); i++)
    {
        var item = @Model.ElementAt(i - 1);
     

        if (i > 12)
        {
            display = "none";
        }
        else
        {
            display = "display";
        }

        <div class="column product" id="@i" style="display:@display">
            <a href="@Url.Action("ProductDetails", "Product", new { productId = @item.Id})">
                <div class="ui card custom">
                    <div class="blurring dimmable image">
                        <div class="ui inverted dimmer">
                            <div class="content custom">
                                <div class="center">
                                    <div class="ui button">
                                        <i class="add icon"></i> Thêm vào giỏ hàng
                                    </div>
                                </div>
                            </div>
                        </div>

                        <img src="@item.ImageProducts.Select(y=>y.Url).FirstOrDefault()" />
                        @if (@item.Promotion != null)
                        {
                            var promotion = item.Promotion.PromotionPercent + "%";
                            <div class="ui red ribbon label">
                                <i class="arrow down icon"></i> @promotion
                            </div>
                        }
                    </div>
                    <div class="content custom">

                        <span class="right floated star price">
                            <i class="dollar icon"></i>
                            @item.PriceDetails.Price
                        </span>
                        <div class="header">@item.ProductName</div>

                    </div>
                </div>
            </a>
        </div>


    }
</div>

@*Page Number*@

<div class="ui grid one column footer">
    <div class="column">
        <div class="ui pagination menu">
            <a class="item disabled pagenumber" id="previous">
                <i class="ui angle left icon"></i>
            </a>
            @for (int i = 1; i <= pageNumbers; i++)
            {
                @if (i <= changePageButtons)
                {
                    if (i == 1)
                    {
                        <a class="item pagenumber active" id="@i">
                            @i
                        </a>
                    }
                    else
                    {
                        <a class="item pagenumber" id="@i">
                            @i
                        </a>
                    }

                }
                else { break; }

            }
            @{ display = pageNumbers <= changePageButtons ? "disabled" : "";}

            <a class="item pagenumber next @display" id="next">
                <i class="ui angle right icon"></i>
            </a>
        </div>
    </div>

</div>

    <script>
        $(document).ready(function () {
            $('.item.pagenumber').on('click', function () {
                var id = $(this).attr('id');  // page-x
                switch (id) {
                    case 'next':
                        if ($(this).hasClass('disabled')) return;
                        updatePageNumbers(1);
                        break;
                    case 'previous':
                        if ($(this).hasClass('disabled')) return;
                        updatePageNumbers(2);
                        break;
                    default:
                        $(this).siblings().removeClass('active');
                        $(this).addClass('active');
                        updateProduct(id);
                        break;
                }

            })

        })

        function updatePageNumbers(event) {                             // event:{ 1: next, 2: previous }
            $('.item.pagenumber').removeClass('active');
            var nextButton = $('#next');
            var previousButton = $('#previous');
            var minPageNumber = parseInt(previousButton.next().text());
            var listPageButton = $('.item.pagenumber');
            var listProduct = $('.column.product');
            var pageNumbers = Math.ceil(listProduct.length / 12);
            var changePageButtons = $('.item.pagenumber').length - 2;
            if (event == 1) {
                previousButton.removeClass('disabled');
                minPageNumber = minPageNumber + changePageButtons;
                if (minPageNumber + changePageButtons - 1 >= pageNumbers) {
                    minPageNumber = pageNumbers - changePageButtons + 1;
                    nextButton.addClass('disabled');
                }
            } else {
                nextButton.removeClass('disabled');
                minPageNumber = minPageNumber - changePageButtons;
                if (minPageNumber <= 1) {
                    minPageNumber = 1;
                    previousButton.addClass('disabled');
                }
            }
            var count = 0;
            for (var i = 1; i <= listPageButton.length; i++) {

                if (i != listPageButton.length && i != 1) {         //except next button and previous button
                    if (count == 0) {
                        updateProduct(minPageNumber);
                        $(listPageButton[i - 1]).addClass('active');
                    }
                    $(listPageButton[i - 1]).text(minPageNumber + count);
                    $(listPageButton[i - 1]).attr('id', minPageNumber + count);
                    count++;
                }
            }
        }

        function updateProduct(id) {                         //event : { 1: SubCategory,   2: Supplier,    3: PriceRange,  4: Filter ,5: Change Page}; id: idEvent
            $('.column.product').each(function () {
                var index = parseInt($(this).attr('id'));           //  subCategoryId-supplierId-ProductId-NumberIndex
                if (index <= (id * 12) && index > (id * 12 - 12))
                { $(this).show(); }
                else { $(this).hide(); }

            })

        }
    </script>

